AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Slack Messaging integration

Metadata:
  AWS::ServerlessRepo::Application:
    Name: urd_messages
    Description: Implementation of ApiGateway, Lambda and Dynamo to send Slack messages in threads using SAM.
    Author: Jose Arevalo
    Labels:
      - slack-sdk
      - dynamodb-local
    SemanticVersion: 0.1.0

Parameters:
  DynamoDBTableName:
    Type: String
    Default: slack_messages_history
    Description: The DynamoDB table for storing slack threads information.
  RegionName:
    Type: String
    Description: Default region for deployment.
    Default: eu-west-1
  DevEnvName:
    Type: String
    Description: Developer environment where code is being executed (OSX, Windows, or Linux).
    Default: OSX

Resources:
  SlackMessagingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: slack_messaging/
      Handler: lambda.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      AutoPublishAlias: live
      Policies:
        - AmazonDynamoDBFullAccess
        - CloudWatchFullAccess
        - AmazonSQSFullAccess
      Timeout: 180
      Environment:
        Variables:
          SLACK_BOT_USER_OAUTH_TOKEN: '{{resolve:ssm:SLACK_BOT_USER_OAUTH_TOKEN:1}}'
          DYNAMODB_TABLE_NAME: !Ref DynamoDBTableName
          REGION_NAME: !Ref RegionName
          DEV_ENV_NAME: !Ref DevEnvName
      Events:
        SlackMessagingQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SlackMessagingSqsQueue.Arn
            BatchSize: 10
        SlackMessagingApi:
          Type: Api
          Properties:
            Path: /send_message
            Method: post
      Tracing: Active
      Layers:
        - arn:aws:lambda:eu-west-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:16
        - !Ref libs
  
  libs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: lambda-dependencies
      Description: Dependencies for Lambda, include slack_sdk
      ContentUri: libs/

  SlackMessagingSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 200
      QueueName: "SlackMessagingSqsQueue"

  SlackMessagingynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      KeySchema:
        - AttributeName: thread_group_key
          KeyType: HASH
        - AttributeName: ts
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: thread_group_key
          AttributeType: S
        - AttributeName: ts
          AttributeType: S

Outputs:
  SlackMessagingFunction:
    Description: SlackMessagingFunction Lambda Function ARN
    Value: !Ref SlackMessagingFunctionAliaslive
  SlackMessagingApi:
    Description: API Gateway endpoint URL for Slack Messaging Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/send_message/