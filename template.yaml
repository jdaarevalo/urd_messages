AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Slack Messaging integration

Metadata:
  AWS::ServerlessRepo::Application:
    Name: urd_messages
    Description: Implementation of ApiGateway, Lambda and Dynamo to send Slack messages in threads using SAM.
    Author: Jose Arevalo
    Labels:
      - slack-sdk
      - dynamodb-local
    SemanticVersion: 0.1.0

Parameters:
  DynamoDBTableName:
    Type: String
    Default: slack_messages_history
    Description: The DynamoDB table for storing slack threads information.
  RegionName:
    Type: String
    Description: Default region for deployment.
    Default: eu-west-1
  DevEnvName:
    Type: String
    Description: Developer environment where code is being executed (OSX, Windows, or Linux).
    Default: OSX

Resources:
##########################################################################
#   HTTP API                                                             #
##########################################################################
  SlackMessagingApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      AccessLogSettings:
        DestinationArn: !GetAtt SlackMessagingApiAccessLogs.Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","routeKey":"$context.routeKey", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: 'api.yaml'

##########################################################################
#   Cloudwatch Logs                                                       #
##########################################################################
  SlackMessagingApiAccessLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: HttpApi-SlackMessaging-Access-Logs
      RetentionInDays: 1

##########################################################################
#   Roles                                                               #
##########################################################################
  SlackMessagingApiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
      - PolicyName: AllowSqsIntegration
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - 'sqs:SendMessage'
                - 'sqs:GetQueueUrl'
                - 'sqs:SendMessageBatch'
              Resource: !GetAtt SlackMessagingSqsQueue.Arn
            - Effect: Allow
              Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:DescribeLogGroups'
                - 'logs:DescribeLogStreams'
                - 'logs:PutLogEvents'
                - 'logs:GetLogEvents'
                - 'logs:FilterLogEvents'
              Resource: !GetAtt SlackMessagingApiAccessLogs.Arn

##########################################################################
# SQS Queue
##########################################################################
  SlackMessagingSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 200
      QueueName: "SlackMessagingSqsQueue"

##########################################################################
# Lambda Function
##########################################################################
  SlackMessagingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: slack_messaging/
      Handler: lambda.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      AutoPublishAlias: live
      Policies:
        - AmazonDynamoDBFullAccess
        - CloudWatchFullAccess
        - AmazonSQSFullAccess
      Timeout: 180
      Environment:
        Variables:
          SLACK_BOT_USER_OAUTH_TOKEN: '{{resolve:ssm:SLACK_BOT_USER_OAUTH_TOKEN:1}}'
          DYNAMODB_TABLE_NAME: !Ref DynamoDBTableName
          REGION_NAME: !Ref RegionName
          DEV_ENV_NAME: !Ref DevEnvName
      Events:
        SlackMessagingQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SlackMessagingSqsQueue.Arn
            BatchSize: 10
      Tracing: Active
      Layers:
        - arn:aws:lambda:eu-west-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:16
        - !Ref SlackSDKLayer

##########################################################################
# Lambda Layer - SlackSDK
##########################################################################
  SlackSDKLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: lambda-layer-slack-sdk
      Description: Dependencies for Lambda, include slack_sdk
      ContentUri: libs/

##########################################################################
# DynamoDB Table
##########################################################################
  SlackMessagingDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      KeySchema:
        - AttributeName: thread_group_key
          KeyType: HASH
        - AttributeName: ts
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: thread_group_key
          AttributeType: S
        - AttributeName: ts
          AttributeType: S

##########################################################################
# Outputs
##########################################################################
Outputs:
  SlackMessagingFunction:
    Description: SlackMessagingFunction Lambda Function ARN
    Value: !Ref SlackMessagingFunctionAliaslive
  SlackMessagingApi:
    Description: API Gateway endpoint URL for Slack Messaging Function
    Value: !Sub "https://${SlackMessagingApi}.execute-api.${AWS::Region}.amazonaws.com/delivery_message"